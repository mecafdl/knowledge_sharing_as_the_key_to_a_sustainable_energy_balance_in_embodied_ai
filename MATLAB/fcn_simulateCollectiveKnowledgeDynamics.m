function remainingKnowledge = ...
            fcn_simulateCollectiveKnowledgeDynamics( ...
                episodes, ...
                numberOfRobots, ...
                initialRemainingKnowedge, ...
                eta_0, ...
                eta_factor, ...
                gamma_0, ...
                Gamma, ...
                EPISODIC, ...
                knowledgeLowerBound)


    % eta_robots   = pearsrnd(eta_0, eta_factor*eta_0, 1, 10, numberOfRobots,1);
    % selfDynamicsMatrix  = -Alpha.*((1 - beta_k).^(-1)).*f(eta_robots, learnedSkills).*eye(numberOfRobots);

    % Simulate system 
    % close all


    remainingKnowledge = ...
        ode4_sat(@(n,sigmaBar) ...
            fcn_collectiveKnowledgeSharingDynamics_mex(...
                sigmaBar, ...
                numberOfRobots, ...
                selfDynamicsMatrix, ...
                gamma_0, ...
                Gamma, ...
                EPISODIC, ...
                knowledgeLowerBound), episodes, initialRemainingKnowedge);

    remainingKnowledge = transpose(remainingKnowledge);
end